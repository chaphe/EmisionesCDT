// <auto-generated />
using System;
using BackendEmisiones.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendEmisiones.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackendEmisiones.Models.ComposicionGas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DioxidoCarbono")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Etano")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Isobutano")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Isopentano")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Metano")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Nbutano")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NdecanoIsomeros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NdodecanoIsomeros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NheptanoIsomeros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NhexanoIsomeros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Nitrogeno")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NnonanoIsomeros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NoctanoIsomeros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NombreGas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Npentano")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NundecanoIsomeros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Oxigeno")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Propano")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ComposicionesGas");
                });

            modelBuilder.Entity("BackendEmisiones.Models.EmisionCombustion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Consecutivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EficienciaCombustion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FactorEmisionId")
                        .HasColumnType("int");

                    b.Property<int>("HorasOperacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SistemaId")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoFuenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactorEmisionId");

                    b.HasIndex("SistemaId");

                    b.HasIndex("TipoFuenteId");

                    b.ToTable("EmisionesCombustion");
                });

            modelBuilder.Entity("BackendEmisiones.Models.EmisionFugitiva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CaudalEmision")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Consecutivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FactorEmisionId")
                        .HasColumnType("int");

                    b.Property<int?>("FactorGwp")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDeteccion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaReparacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Fuga")
                        .HasColumnType("bit");

                    b.Property<int>("HorasOperacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Presion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SistemaId")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tamano")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Temperatura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoFuenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactorEmisionId");

                    b.HasIndex("SistemaId");

                    b.HasIndex("TipoFuenteId");

                    b.ToTable("EmisionesFugitivas");
                });

            modelBuilder.Entity("BackendEmisiones.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CargoContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FactorGwp")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naturaleza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("BackendEmisiones.Models.Evidencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmisionFugitivaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaDeteccion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaReparacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FotoAntes")
                        .HasColumnType("bit");

                    b.Property<bool>("FotoDespues")
                        .HasColumnType("bit");

                    b.Property<int>("UsuarioDeteccionId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioReparacionId")
                        .HasColumnType("int");

                    b.Property<bool>("Video")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmisionFugitivaId");

                    b.ToTable("Evidencias");
                });

            modelBuilder.Entity("BackendEmisiones.Models.FactorEmision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ComposicionGasId")
                        .HasColumnType("int");

                    b.Property<string>("NombreGas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorCh4fugitivas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorCo2combustion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorCo2fugitivas")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ComposicionGasId");

                    b.ToTable("FactoresEmision");
                });

            modelBuilder.Entity("BackendEmisiones.Models.Planta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Plantas");
                });

            modelBuilder.Entity("BackendEmisiones.Models.ReporteMensual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anho")
                        .HasColumnType("int");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<string>("Planta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReporteMensual");
                });

            modelBuilder.Entity("BackendEmisiones.Models.ReporteMensualDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("EmisionCO2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Enision")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FactorEmisionId")
                        .HasColumnType("int");

                    b.Property<string>("NombreGas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReporteMensualId")
                        .HasColumnType("int");

                    b.Property<string>("Sistema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SistemaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReporteMensualId");

                    b.ToTable("ReporteMensualDetalle");
                });

            modelBuilder.Entity("BackendEmisiones.Models.ReporteMensualGas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anho")
                        .HasColumnType("int");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Gas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GasId")
                        .HasColumnType("int");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<string>("Planta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReporteMensualGas");
                });

            modelBuilder.Entity("BackendEmisiones.Models.ReporteMensualGasDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("EmisionCO2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Enision")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReporteMensualGasId")
                        .HasColumnType("int");

                    b.Property<string>("Sistema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SistemaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReporteMensualGasId");

                    b.ToTable("ReporteMensualGasDetalle");
                });

            modelBuilder.Entity("BackendEmisiones.Models.Sistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlantaId");

                    b.ToTable("Sistemas");
                });

            modelBuilder.Entity("BackendEmisiones.Models.TipoFuente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdClasificacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoEmision")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TipoFuente");
                });

            modelBuilder.Entity("BackendEmisiones.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BackendEmisiones.Models.EmisionCombustion", b =>
                {
                    b.HasOne("BackendEmisiones.Models.FactorEmision", "FactorEmision")
                        .WithMany("EmisionesCombustion")
                        .HasForeignKey("FactorEmisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendEmisiones.Models.Sistema", "Sistema")
                        .WithMany("EmisionesCombustion")
                        .HasForeignKey("SistemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendEmisiones.Models.TipoFuente", "TipoFuente")
                        .WithMany()
                        .HasForeignKey("TipoFuenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FactorEmision");

                    b.Navigation("Sistema");

                    b.Navigation("TipoFuente");
                });

            modelBuilder.Entity("BackendEmisiones.Models.EmisionFugitiva", b =>
                {
                    b.HasOne("BackendEmisiones.Models.FactorEmision", null)
                        .WithMany("EmisionesFugitivas")
                        .HasForeignKey("FactorEmisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendEmisiones.Models.Sistema", "Sistema")
                        .WithMany("EmisionesFugitivas")
                        .HasForeignKey("SistemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendEmisiones.Models.TipoFuente", null)
                        .WithMany("EmisionesFugitivas")
                        .HasForeignKey("TipoFuenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sistema");
                });

            modelBuilder.Entity("BackendEmisiones.Models.Evidencia", b =>
                {
                    b.HasOne("BackendEmisiones.Models.EmisionFugitiva", "EmisionFugitiva")
                        .WithMany("Evidencias")
                        .HasForeignKey("EmisionFugitivaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmisionFugitiva");
                });

            modelBuilder.Entity("BackendEmisiones.Models.FactorEmision", b =>
                {
                    b.HasOne("BackendEmisiones.Models.ComposicionGas", "ComposicionGas")
                        .WithMany()
                        .HasForeignKey("ComposicionGasId");

                    b.Navigation("ComposicionGas");
                });

            modelBuilder.Entity("BackendEmisiones.Models.Planta", b =>
                {
                    b.HasOne("BackendEmisiones.Models.Empresa", "Empresa")
                        .WithMany("Plantas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("BackendEmisiones.Models.ReporteMensualDetalle", b =>
                {
                    b.HasOne("BackendEmisiones.Models.ReporteMensual", "ReporteMensual")
                        .WithMany("Items")
                        .HasForeignKey("ReporteMensualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReporteMensual");
                });

            modelBuilder.Entity("BackendEmisiones.Models.ReporteMensualGasDetalle", b =>
                {
                    b.HasOne("BackendEmisiones.Models.ReporteMensualGas", "ReporteMensual")
                        .WithMany("Items")
                        .HasForeignKey("ReporteMensualGasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReporteMensual");
                });

            modelBuilder.Entity("BackendEmisiones.Models.Sistema", b =>
                {
                    b.HasOne("BackendEmisiones.Models.Planta", "Planta")
                        .WithMany("Sistemas")
                        .HasForeignKey("PlantaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planta");
                });

            modelBuilder.Entity("BackendEmisiones.Models.EmisionFugitiva", b =>
                {
                    b.Navigation("Evidencias");
                });

            modelBuilder.Entity("BackendEmisiones.Models.Empresa", b =>
                {
                    b.Navigation("Plantas");
                });

            modelBuilder.Entity("BackendEmisiones.Models.FactorEmision", b =>
                {
                    b.Navigation("EmisionesCombustion");

                    b.Navigation("EmisionesFugitivas");
                });

            modelBuilder.Entity("BackendEmisiones.Models.Planta", b =>
                {
                    b.Navigation("Sistemas");
                });

            modelBuilder.Entity("BackendEmisiones.Models.ReporteMensual", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("BackendEmisiones.Models.ReporteMensualGas", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("BackendEmisiones.Models.Sistema", b =>
                {
                    b.Navigation("EmisionesCombustion");

                    b.Navigation("EmisionesFugitivas");
                });

            modelBuilder.Entity("BackendEmisiones.Models.TipoFuente", b =>
                {
                    b.Navigation("EmisionesFugitivas");
                });
#pragma warning restore 612, 618
        }
    }
}
